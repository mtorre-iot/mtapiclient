// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TrendFileService/Protos/trend.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TrendFileService {
  /// <summary>
  /// The trend service definition.
  /// </summary>
  public static partial class Trend
  {
    static readonly string __ServiceName = "trend.Trend";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.Empty> __Marshaller_trend_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.IdentityResponse> __Marshaller_trend_IdentityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.IdentityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.LoadTrendRequest> __Marshaller_trend_LoadTrendRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.LoadTrendRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.LoadTrendResponse> __Marshaller_trend_LoadTrendResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.LoadTrendResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.SelectWorkflowRequest> __Marshaller_trend_SelectWorkflowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.SelectWorkflowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.SelectWorkflowResponse> __Marshaller_trend_SelectWorkflowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.SelectWorkflowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.SelectionsResponse> __Marshaller_trend_SelectionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.SelectionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.StartStreamRequest> __Marshaller_trend_StartStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.StartStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.DataStreamResponse> __Marshaller_trend_DataStreamResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.DataStreamResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TrendFileService.StopStreamResponse> __Marshaller_trend_StopStreamResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TrendFileService.StopStreamResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.Empty, global::TrendFileService.IdentityResponse> __Method_GetIdentity = new grpc::Method<global::TrendFileService.Empty, global::TrendFileService.IdentityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIdentity",
        __Marshaller_trend_Empty,
        __Marshaller_trend_IdentityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.LoadTrendRequest, global::TrendFileService.LoadTrendResponse> __Method_LoadTrend = new grpc::Method<global::TrendFileService.LoadTrendRequest, global::TrendFileService.LoadTrendResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoadTrend",
        __Marshaller_trend_LoadTrendRequest,
        __Marshaller_trend_LoadTrendResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.SelectWorkflowRequest, global::TrendFileService.SelectWorkflowResponse> __Method_SelectWorkflow = new grpc::Method<global::TrendFileService.SelectWorkflowRequest, global::TrendFileService.SelectWorkflowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SelectWorkflow",
        __Marshaller_trend_SelectWorkflowRequest,
        __Marshaller_trend_SelectWorkflowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.Empty, global::TrendFileService.SelectionsResponse> __Method_GetSelections = new grpc::Method<global::TrendFileService.Empty, global::TrendFileService.SelectionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSelections",
        __Marshaller_trend_Empty,
        __Marshaller_trend_SelectionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.StartStreamRequest, global::TrendFileService.DataStreamResponse> __Method_StartDataStream = new grpc::Method<global::TrendFileService.StartStreamRequest, global::TrendFileService.DataStreamResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "StartDataStream",
        __Marshaller_trend_StartStreamRequest,
        __Marshaller_trend_DataStreamResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TrendFileService.Empty, global::TrendFileService.StopStreamResponse> __Method_StopDataStream = new grpc::Method<global::TrendFileService.Empty, global::TrendFileService.StopStreamResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopDataStream",
        __Marshaller_trend_Empty,
        __Marshaller_trend_StopStreamResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TrendFileService.TrendReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Trend</summary>
    [grpc::BindServiceMethod(typeof(Trend), "BindService")]
    public abstract partial class TrendBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TrendFileService.IdentityResponse> GetIdentity(global::TrendFileService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TrendFileService.LoadTrendResponse> LoadTrend(global::TrendFileService.LoadTrendRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TrendFileService.SelectWorkflowResponse> SelectWorkflow(global::TrendFileService.SelectWorkflowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TrendFileService.SelectionsResponse> GetSelections(global::TrendFileService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task StartDataStream(global::TrendFileService.StartStreamRequest request, grpc::IServerStreamWriter<global::TrendFileService.DataStreamResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TrendFileService.StopStreamResponse> StopDataStream(global::TrendFileService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TrendBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetIdentity, serviceImpl.GetIdentity)
          .AddMethod(__Method_LoadTrend, serviceImpl.LoadTrend)
          .AddMethod(__Method_SelectWorkflow, serviceImpl.SelectWorkflow)
          .AddMethod(__Method_GetSelections, serviceImpl.GetSelections)
          .AddMethod(__Method_StartDataStream, serviceImpl.StartDataStream)
          .AddMethod(__Method_StopDataStream, serviceImpl.StopDataStream).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TrendBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetIdentity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TrendFileService.Empty, global::TrendFileService.IdentityResponse>(serviceImpl.GetIdentity));
      serviceBinder.AddMethod(__Method_LoadTrend, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TrendFileService.LoadTrendRequest, global::TrendFileService.LoadTrendResponse>(serviceImpl.LoadTrend));
      serviceBinder.AddMethod(__Method_SelectWorkflow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TrendFileService.SelectWorkflowRequest, global::TrendFileService.SelectWorkflowResponse>(serviceImpl.SelectWorkflow));
      serviceBinder.AddMethod(__Method_GetSelections, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TrendFileService.Empty, global::TrendFileService.SelectionsResponse>(serviceImpl.GetSelections));
      serviceBinder.AddMethod(__Method_StartDataStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::TrendFileService.StartStreamRequest, global::TrendFileService.DataStreamResponse>(serviceImpl.StartDataStream));
      serviceBinder.AddMethod(__Method_StopDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TrendFileService.Empty, global::TrendFileService.StopStreamResponse>(serviceImpl.StopDataStream));
    }

  }
}
#endregion
